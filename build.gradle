plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

group 'com.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.microsoft.playwright:playwright:1.46.0'
}

dependencies {
    testImplementation 'info.cukes:cucumber-jvm:1+'
    testImplementation 'info.cukes:cucumber-jvm-deps:1+'
    testImplementation 'info.cukes:cucumber-java:1+'
    testImplementation 'info.cukes:cucumber-junit:1+'
    testImplementation 'info.cukes:cucumber-core:1+'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.slf4j:slf4j-jdk14:2.0.7'
    testImplementation 'io.cucumber:cucumber-junit-platform-engine:7.8.1'
    testImplementation 'com.microsoft.playwright:playwright:1.41.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
    testImplementation 'org.junit.platform:junit-platform-suite:1.9.1'
    testImplementation 'info.cukes:cucumber-junit:1.1.5'
    testImplementation 'io.cucumber:cucumber-junit:7.0.0'
    testImplementation 'io.cucumber:cucumber-core:7.12.0'
    testImplementation 'io.cucumber:cucumber-java:7.18.1'
    testImplementation 'net.saliman:gradle-cobertura-plugin:2.2.7'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    implementation 'org.json:json:20190722'
}
ext {
    junitVersion = '5.9.1'
}

sourceCompatibility = '19'
targetCompatibility = '19'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'com.example.demo'
    mainClass = 'com.example.demo.HelloApplication'
}

javafx {
    version = '19'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}